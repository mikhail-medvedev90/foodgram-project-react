# Generated by Django 4.2.6 on 2023-11-07 07:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("recipes", "0007_alter_ingredient_options_alter_recipe_options_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="favoriterecipe",
            options={
                "default_related_name": "favorites",
                "verbose_name": "Favorite Recipe",
                "verbose_name_plural": "Favorite Recipes",
            },
        ),
        migrations.AlterModelOptions(
            name="shoppingcart",
            options={
                "default_related_name": "cart",
                "verbose_name": "Shopping cart",
                "verbose_name_plural": "Shopping carts",
            },
        ),
        migrations.RemoveConstraint(
            model_name="favoriterecipe",
            name="unique_favorite_recipe",
        ),
        migrations.RemoveConstraint(
            model_name="shoppingcart",
            name="unique_shopping_cart",
        ),
        migrations.AlterField(
            model_name="favoriterecipe",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="recipes.recipe",
                verbose_name="Recipe",
            ),
        ),
        migrations.AlterField(
            model_name="favoriterecipe",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="recipe",
            name="cooking_time",
            field=models.PositiveSmallIntegerField(
                help_text="Input the total cooking time in minutes.",
                validators=[
                    django.core.validators.MinValueValidator(
                        1, message="Cooking time must be at least 1 minute."
                    ),
                    django.core.validators.MaxValueValidator(
                        1440,
                        message="Cooking time cannot be greater than 1440 (24hours)",
                    ),
                ],
                verbose_name="Cooking time",
            ),
        ),
        migrations.AlterField(
            model_name="recipeingredient",
            name="amount",
            field=models.PositiveSmallIntegerField(
                default=1,
                validators=[
                    django.core.validators.MinValueValidator(
                        1, message="Amount must be at least 1."
                    ),
                    django.core.validators.MaxValueValidator(
                        1111, message="Amount must be at most 1111."
                    ),
                ],
                verbose_name="Amount",
            ),
        ),
        migrations.AlterField(
            model_name="shoppingcart",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="recipes.recipe",
                verbose_name="Recipe",
            ),
        ),
        migrations.AlterField(
            model_name="shoppingcart",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredient",
            constraint=models.UniqueConstraint(
                fields=("name", "measurement_unit"), name="unique_ingredient"
            ),
        ),
        migrations.AddConstraint(
            model_name="recipeingredient",
            constraint=models.UniqueConstraint(
                fields=("recipe", "ingredient"), name="unique_recipe_ingredient"
            ),
        ),
    ]
