# Generated by Django 4.2.6 on 2023-10-31 08:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FavoriteRecipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Favorite Recipe",
                "verbose_name_plural": "Favorite Recipes",
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "measurement_unit",
                    models.CharField(max_length=200, verbose_name="Measurement unit"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "image",
                    models.ImageField(upload_to="recipes/", verbose_name="Image"),
                ),
                ("text", models.TextField(verbose_name="Text")),
                (
                    "cooking_time",
                    models.PositiveIntegerField(
                        help_text="Input the total cooking time in minutes.",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, message="Cooking time must be at least 1 minute."
                            )
                        ],
                        verbose_name="Cooking time",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Publication Date"
                    ),
                ),
            ],
            options={
                "ordering": ("-pub_date",),
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, message="Amount must be at least 1."
                            )
                        ],
                        verbose_name="Amount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe ingredient",
                "verbose_name_plural": "Recipe ingredients",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, unique=True, verbose_name="Name"),
                ),
                (
                    "color",
                    models.CharField(
                        help_text="Input color value in hex format starting with #.",
                        max_length=9,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid hex color code. Example: #000000. Hint: HEX color in short format and with alpha channel is also supported.",
                                regex="#([A-Fa-f0-9]{6})|#([A-Fa-f0-9]{3})|#([A-Fa-f0-9]{8})",
                            )
                        ],
                        verbose_name="Color value in hex format",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        error_messages={
                            "unique": "Please, try another one. All slugs must be unique."
                        },
                        max_length=200,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShoppingCart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shopping cart",
                "verbose_name_plural": "Shopping carts",
            },
        ),
    ]
